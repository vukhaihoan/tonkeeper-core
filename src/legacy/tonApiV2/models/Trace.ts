/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Transaction } from './Transaction';
import {
    TransactionFromJSON,
    TransactionFromJSONTyped,
    TransactionToJSON,
} from './Transaction';

/**
 * 
 * @export
 * @interface Trace
 */
export interface Trace {
    /**
     * 
     * @type {Transaction}
     * @memberof Trace
     */
    transaction: Transaction;
    /**
     * 
     * @type {Array<string>}
     * @memberof Trace
     */
    interfaces: Array<string>;
    /**
     * 
     * @type {Array<Trace>}
     * @memberof Trace
     */
    children?: Array<Trace>;
}

/**
 * Check if a given object implements the Trace interface.
 */
export function instanceOfTrace(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "transaction" in value;
    isInstance = isInstance && "interfaces" in value;

    return isInstance;
}

export function TraceFromJSON(json: any): Trace {
    return TraceFromJSONTyped(json, false);
}

export function TraceFromJSONTyped(json: any, ignoreDiscriminator: boolean): Trace {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'transaction': TransactionFromJSON(json['transaction']),
        'interfaces': json['interfaces'],
        'children': !exists(json, 'children') ? undefined : ((json['children'] as Array<any>).map(TraceFromJSON)),
    };
}

export function TraceToJSON(value?: Trace | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'transaction': TransactionToJSON(value.transaction),
        'interfaces': value.interfaces,
        'children': value.children === undefined ? undefined : ((value.children as Array<any>).map(TraceToJSON)),
    };
}

