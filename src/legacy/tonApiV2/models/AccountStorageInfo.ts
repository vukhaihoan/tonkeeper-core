/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AccountStorageInfo
 */
export interface AccountStorageInfo {
    /**
     * 
     * @type {number}
     * @memberof AccountStorageInfo
     */
    usedCells: number;
    /**
     * 
     * @type {number}
     * @memberof AccountStorageInfo
     */
    usedBits: number;
    /**
     * 
     * @type {number}
     * @memberof AccountStorageInfo
     */
    usedPublicCells: number;
    /**
     * 
     * @type {number}
     * @memberof AccountStorageInfo
     */
    lastPaid: number;
    /**
     * 
     * @type {number}
     * @memberof AccountStorageInfo
     */
    duePayment: number;
}

/**
 * Check if a given object implements the AccountStorageInfo interface.
 */
export function instanceOfAccountStorageInfo(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "usedCells" in value;
    isInstance = isInstance && "usedBits" in value;
    isInstance = isInstance && "usedPublicCells" in value;
    isInstance = isInstance && "lastPaid" in value;
    isInstance = isInstance && "duePayment" in value;

    return isInstance;
}

export function AccountStorageInfoFromJSON(json: any): AccountStorageInfo {
    return AccountStorageInfoFromJSONTyped(json, false);
}

export function AccountStorageInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountStorageInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'usedCells': json['used_cells'],
        'usedBits': json['used_bits'],
        'usedPublicCells': json['used_public_cells'],
        'lastPaid': json['last_paid'],
        'duePayment': json['due_payment'],
    };
}

export function AccountStorageInfoToJSON(value?: AccountStorageInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'used_cells': value.usedCells,
        'used_bits': value.usedBits,
        'used_public_cells': value.usedPublicCells,
        'last_paid': value.lastPaid,
        'due_payment': value.duePayment,
    };
}

