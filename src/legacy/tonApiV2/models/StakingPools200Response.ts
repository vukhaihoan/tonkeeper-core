/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PoolImplementation } from './PoolImplementation';
import {
    PoolImplementationFromJSON,
    PoolImplementationFromJSONTyped,
    PoolImplementationToJSON,
} from './PoolImplementation';
import type { PoolInfo } from './PoolInfo';
import {
    PoolInfoFromJSON,
    PoolInfoFromJSONTyped,
    PoolInfoToJSON,
} from './PoolInfo';

/**
 * 
 * @export
 * @interface StakingPools200Response
 */
export interface StakingPools200Response {
    /**
     * 
     * @type {Array<PoolInfo>}
     * @memberof StakingPools200Response
     */
    pools: Array<PoolInfo>;
    /**
     * 
     * @type {{ [key: string]: PoolImplementation; }}
     * @memberof StakingPools200Response
     */
    implementations: { [key: string]: PoolImplementation; };
}

/**
 * Check if a given object implements the StakingPools200Response interface.
 */
export function instanceOfStakingPools200Response(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "pools" in value;
    isInstance = isInstance && "implementations" in value;

    return isInstance;
}

export function StakingPools200ResponseFromJSON(json: any): StakingPools200Response {
    return StakingPools200ResponseFromJSONTyped(json, false);
}

export function StakingPools200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): StakingPools200Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'pools': ((json['pools'] as Array<any>).map(PoolInfoFromJSON)),
        'implementations': (mapValues(json['implementations'], PoolImplementationFromJSON)),
    };
}

export function StakingPools200ResponseToJSON(value?: StakingPools200Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'pools': ((value.pools as Array<any>).map(PoolInfoToJSON)),
        'implementations': (mapValues(value.implementations, PoolImplementationToJSON)),
    };
}

