/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { NftItem } from './NftItem';
import {
    NftItemFromJSON,
    NftItemFromJSONTyped,
    NftItemToJSON,
} from './NftItem';

/**
 * 
 * @export
 * @interface DnsExpiringItemsInner
 */
export interface DnsExpiringItemsInner {
    /**
     * 
     * @type {number}
     * @memberof DnsExpiringItemsInner
     */
    expiringAt: number;
    /**
     * 
     * @type {string}
     * @memberof DnsExpiringItemsInner
     */
    name: string;
    /**
     * 
     * @type {NftItem}
     * @memberof DnsExpiringItemsInner
     */
    dnsItem?: NftItem;
}

/**
 * Check if a given object implements the DnsExpiringItemsInner interface.
 */
export function instanceOfDnsExpiringItemsInner(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "expiringAt" in value;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function DnsExpiringItemsInnerFromJSON(json: any): DnsExpiringItemsInner {
    return DnsExpiringItemsInnerFromJSONTyped(json, false);
}

export function DnsExpiringItemsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): DnsExpiringItemsInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'expiringAt': json['expiring_at'],
        'name': json['name'],
        'dnsItem': !exists(json, 'dns_item') ? undefined : NftItemFromJSON(json['dns_item']),
    };
}

export function DnsExpiringItemsInnerToJSON(value?: DnsExpiringItemsInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'expiring_at': value.expiringAt,
        'name': value.name,
        'dns_item': NftItemToJSON(value.dnsItem),
    };
}

